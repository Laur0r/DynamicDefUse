<idea-plugin>
    <id>dacite.dacite-intellij</id>
    <name>Dacite</name>
    <vendor url="https://github.com/dacite-defuse">Dacite: DAta-flow Coverage for Imperative TEsting</vendor>

    <description><![CDATA[
        DAta-flow Coverage for Imperative TEsting.
    ]]></description>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <notificationGroup id="dacite" displayType="STICKY_BALLOON"/>
        <!--<postStartupActivity implementation="dacite.intellij.LanguageServerStartupActivity"/>-->
        <runLineMarkerContributor language="JAVA"
                                  implementationClass="dacite.intellij.DaciteRunLineMarkerContributor"/>

        <!--<codeInsight.inlayProvider language="JAVA" implementationClass="dacite.intellij.visualisation.DaciteInlayHint"/>-->

        <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
        <preloadingActivity implementation="dacite.intellij.LSPPreloadingClass" id="your.plugin.MyPreloadingActivity"/>

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon -->
        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                order="first" />

        <!-- needed for completion -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="dacite.intellij.lspclient.contributors.LSPCompletionContributor" language="JAVA"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="LSPAnnotator" language="JAVA"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
      <action id="dacite.intellij.actions.DaciteAnalyzeAction" class="dacite.intellij.actions.DaciteAnalyzeAction"
              text="Run Dacite Analysis" description="Dynamic analysis of def-use chains" icon="AllIcons.Actions.StartMemoryProfile">
      </action>
    </actions>
    <applicationListeners>
        <!-- required for lsp file sync -->
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
</idea-plugin>
